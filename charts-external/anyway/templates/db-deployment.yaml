{{ if and .Values.enabled .Values.db.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  selector:
    matchLabels:
      app: db
  replicas: 1
  revisionHistoryLimit: 2
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: db
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: db
        image: {{ .Values.db.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        ports:
        - name: postgres
          containerPort: {{ .Values.db.service.port }}
        readinessProbe:
          tcpSocket:
            port: postgres
          {{ if .Values.restore.enabled }}
          initialDelaySeconds: 180
          {{ else }}
          initialDelaySeconds: 30
          {{ end }}
        livenessProbe:
          tcpSocket:
            port: postgres
          {{ if .Values.restore.enabled }}
          initialDelaySeconds: 180
          {{ else }}
          initialDelaySeconds: 30
          {{ end }}
        resources: {{ .Values.dbResources }}
        env:
        - name: POSTGRES_PASSWORD
          valueFrom: {"secretKeyRef":{"name":"db", "key":"POSTGRES_PASSWORD"}}
        - name: POSTGRES_USER
          value: anyway
        {{ if .Values.restore.enabled }}
        - name: RESTORE_DB
          value: "TRUE"
        - name: GDRIVE_FILE_ID  ## Needs to be a secret?
          value: {{ .Values.restore.gdrive_file_id }}
        {{ end }}
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
          # postgres doesn't let you use the root of a disk (it complaints about having lost+found directory)
          subPath: dbdata
      volumes:
      - name: data
      {{ if .Values.dbPersistentDiskName }}
        # FIXME
        gcePersistentDisk:
          pdName: {{ .Values.dbPersistentDiskName | quote }}
      {{ else }}
        emptyDir: {}
      {{ end }}
{{ end }}
